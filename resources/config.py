"""
配置类
config.py
从外部文件读取配置
created by 李龙 2021/12
最终修改 by 李龙 2021/1/15
"""
import os
from re import T
import numpy as np

enemy_color = 0 # 0：敌方为红色；1：敌方为蓝色
USEABLE = {
    "cam_left": True,
    "cam_right": True,
    "serial": True,
    "Lidar": True,
    "locate_state": [1, 1],
}
BO = 3
DEBUG = False

using_video = False
cam_config = {
    "cam_right": {
        "id": "J37877236",
        "size": (3072, 2048),
        "roi": (0, 0, 3072, 2048),
        "video_path": "/home/mark/视频/11_19_27_right.avi",
        "K_0": np.mat([[2505.2629026927225, 0.0, 1529.4286325395244],
                       [0.0, 2505.5722700649067, 1026.1378217662113],
                       [0.0, 0.0, 1.0]]),
        "C_0": np.mat([-0.06856710471358254, 0.1269396451339073,
                       -0.0003599605406165552, -0.0004173270419984247,
                       -0.141056084229664]),
        "exposure": 15000,
        "gain": 22,
        "rvec": np.mat([[1.69750257], [0.69091169], [-0.54474128]]),
        "tvec": np.mat([[-11381.85466339], [-584.01247871], [9359.30328641]]),
        "E_0": np.mat([
            [0.00462803, -0.999749, 0.0219115, 0.154876],
            [0.0931124, -0.0213857, -0.995426, -0.0506296],
            [0.995645, 0.0066471, 0.0929901, -0.137197],
            [0, 0, 0, 1]
        ])},

    "cam_left": {
        "id": "J87631625",
        "size": (3072, 2048),
        "roi": (0, 0, 3072, 2048),
        "video_path": "/home/mark/视频/11_19_27_left.avi",
        "K_0": np.mat([[2580.7380664637653, 0.0, 1535.9830165125002],
                       [0.0, 2582.8839945792183, 1008.784910706948],
                       [0.0, 0.0, 1.0]]),
        "C_0": np.mat([[-0.0640364274094021], [0.04211319930460198], [0.0010490064499735965],
                       [-0.0003352752162304746], [0.27835581516135494]]),
        "exposure": 15000,
        "gain": 22,
        "rvec": np.mat([[1.69750257], [0.69091169], [-0.54474128]]),
        "tvec": np.mat([[-11381.85466339], [-479.01247871], [9449.30328641]]),
        "E_0": np.mat([
            [0.001792, -0.999867, 0.0161871, 0.100099],
            [0.00252176, -0.0161825, -0.999866, -0.00737759],
            [0.999995, 0.00183258, 0.00249243, 0.031457],
            [0, 0, 0, 1]
        ])},
}

net1_engine = os.path.dirname(os.path.abspath(__file__)) + "/net_onnx/net1_sjtu.engine"
net2_engine = os.path.dirname(os.path.abspath(__file__)) + "/net_onnx/net2.engine"

net1_cls = ['car', 'watcher', 'base']
net2_cls_names = ["0", "1", "2", "3", "4",
                  "5", "O", "Bs", "Bb"]
net2_col_names = ["B", "R", "N", "P"]

color2enemy = {"red": 0, "blue": 1}
enemy2color = ['red', 'blue']
num2cam = ['左', '右']

enemy_case = ["环形高地1", "环形高地2", "打符", "前哨站", "飞坡", "3号高地"]  # 这些区域在预警时只考虑敌方的该区域

our_case = ["missle_launch1", "missle_lauch2", "danger"]

armor_list = ['R1', 'R2', 'R3', 'R4', 'R5', 'B1', 'B2', 'B3', 'B4', 'B5']  # 雷达站实际考虑的各个装甲板类
unit_list = ['R1', 'R2', 'R3', 'R4', 'R5', 'RG', 'RO', 'RB', 'B1', 'B2', 'B3', 'B4', 'B5', 'BG', 'BO',
             'BB']  # 赛场上各个目标，主要用于HP显示

# 小地图图片路径
MAP_PATH = os.path.dirname(os.path.abspath(__file__)) + "/map.jpg"
BAG_FIRE = "/home/mark/hitsz_radar_2022/2022-06-15-10-11-01.bag"

# 小地图设定大小
map_size = (716, 384)
real_size = (28., 15.)
# UI中主视频源初始图像路径

INIT_FRAME_PATH = os.path.dirname(os.path.abspath(__file__)) + "/beijing.png"

# 
region = \
    {
        'a_fp_red_环形高地1_a': [17.56, 7.81, 19.01, 8.25, 19.06, 5.40, 17.50, 5.86, 0.60],
        'a_fp_red_环形高地2_a': [15.85, 3.43, 17.50, 5.86, 19.06, 5.40, 17.11, 2.48, 0.60],
        'a_r_red_打符_a': [9.22, 2.50, 7.02, 1.30, 0.85, 0.85],
        'a_fp_red_前哨站_d': [10.95, 12.41, 12.22, 14.90, 14.75, 13.90, 12.27, 11.63, 0.73, 0.20],
        'a_r_red_飞坡_d': [7.74, 1.07, 12.49, 0.12, 0.2, 0.6],
        'a_fp_red_3号高地_a': [4.48, 13.34, 9.08, 13.83, 6.18, 9.72, 4.48, 9.87, 0.60],

        'a_fp_blue_环形高地1_a': [8.90, 6.69, 8.90, 9.57, 10.37, 9.00, 10.37, 7.00, 0.60],
        'a_fp_blue_环形高地2_a': [10.42, 9.12, 8.96, 9.56, 10.96, 12.42, 12.27, 11.64, 0.60],
        'a_r_blue_打符_a': [19.90, 13.70, 18.70, 12.50, 0.85, 0.85],
        'a_fp_blue_前哨站_d': [13.22, 1.09, 15.85, 3.43, 17.11, 2.48, 16.19, 0.12, 0.20, 0.73],
        'a_r_blue_飞坡_d': [15.44, 14.90, 20.26, 13.78, 0.6, 0.2],
        'a_fp_blue_3号高地_a': [21.97, 5.28, 23.59, 5.16, 23.47, 1.63, 18.89, 1.17, 0.60],
    }

test_region = \
    {
        'a_fp_red_环形高地_a': [8.90, 6.69, 8.90, 9.36, 10.37, 9.00, 10.37, 7.00, 0.60],
        'a_fp_blue_环形高地_a': [8.90, 6.69, 8.90, 9.36, 10.37, 9.00, 10.37, 7.00, 0.60],
    }

PC_STORE_DIR = ""
LIDAR_TOPIC_NAME = "/livox/lidar"

# 0为正式场上使用的points 1为debug用
objNames = [
    {
        "cam_left_red": ['飞坡点(右)', '风车狙击点角(左)', '烧饼左', 'R2右', '环形高地银矿左角（敌方）',
                         '敌方环形高地围栏点', '我方银矿左上', '我方银矿左下', 'B3B1', '我方长挡板高点'],
        "cam_right_red": ['我方风车狙击点角(左)', '烧饼左', 'R2右', '环形高地银矿左角(敌方)', '敌方环形高地围栏点',
                          '我方银矿左上', '我方银矿左下', 'R4右口', '我方长挡板高点'],
        "cam_left_blue": ['飞坡点(右)', '风车狙击点角(左)', '烧饼左', 'B2右', '环形高地银矿左角(敌方)',
                          '敌方环形高地围栏点', '我方银矿左上', '我方银矿左下', 'R3R1', '我方长挡板高点'],
        "cam_right_blue": ['我方风车狙击点角(左)', '烧饼左', 'B2右', '环形高地银矿左角(敌方)', '敌方环形高地围栏点',
                           '我方银矿左上', '我方银矿左下', 'B4右口', '我方长挡板高点'],
    },
    {
        "cam_left_red": ['风车狙击点角', '烧饼轨道左', '烧饼轨道右', '环形高低银矿处角',
                         '环形高低坡下角(右)', '环形高地坡右下角(左)', " "],
        "cam_right_red": ['风车狙击点角', '烧饼轨道左', '烧饼轨道右', '环形高低银矿处角',
                          '环形高低坡下角(右)', '环形高地坡右下角(左)', " "],
        "cam_left_blue": ['风车狙击点角', '烧饼轨道左', '烧饼轨道右', '环形高低银矿处角',
                          '环形高低坡下角(右)', '环形高地坡右下角(左)', " "],
        "cam_right_blue": ['风车狙击点角', '烧饼轨道左', '烧饼轨道右', '环形高低银矿处角',
                           '环形高低坡下角(右)', '环形高地坡右下角(左)', " "]
    }
]

real_points = [
    [12.32, 1.10, 0.60],
    [9.40, 1.17, 0.95],
    [9.45, 2.70, 0.95],
    [11.15, 2.46, 1.42],
    [6.79, 4.50, 0.65],
    [4.48, 5.48, 1.40],
    [4.43, 9.57, 1.40],
    [8.81, 6.62, 0.73],
    [12.25, 4.53, 0.73],
    [10.40, 7.13, 0.73],
    [10.42, 9.13, 0.73],
    [8.96, 9.57, 0.73],
    [9.08, 13.83, 0.65],
    [10.96, 12.42, 0.73],
    [12.27, 11.64, 0.73],
    [13.22, 12.88, 0.34],
    [11.91, 13.83, 0.73],
    [15.75, 13.86, 0.60],
    [18.53, 13.86, 0.95],
    [18.53, 12.35, 0.95],
    [16.80, 12.59, 1.42],
    [21.28, 10.50, 0.65],
    [22.57, 9.57, 1.40],
    [22.57, 5.43, 1.40],
    [26.20, 7.52, 1.13],
    [19.02, 8.25, 0.73],
    [19.06, 5.41, 0.73],
    [17.51, 5.87, 0.73],
    [17.55, 7.82, 0.73],
    [15.78, 10.42, 0.73],
    [17.51, 10.42, 0.24],
    [15.85, 3.43, 0.73],
    [17.12, 2.48, 0.73],
    [14.68, 2.12, 0.34],
    [16.07, 1.22, 0.73],
    [18.89, 1.17, 0.65],
    [23.47, 1.63, 0.65],
    [4.48, 13.34, 0.65],
    [13.29, 8.55, 0.60],
    [15.07, 6.82, 0.60],
    [14.68, 6.38, 0.60],
    [12.88, 8.21, 0.60],
    [1.78, 7.50, 1.13],
    [10.45, 4.55, 0.24],
    [4.48, 9.87, 0.65],
    [6.65, 10.50, 0.65],
    [7.30, 11.54, 0.65],
    [6.55, 7.5, 0],
    [7.38, 3.46, 0.65],
    [11.71, 3.36, 0],
    [20.60, 11.52, 0.65],
    [14.75, 13.90, 0.2],
    [14.80, 14.90, 0.2],
    [12.22, 14.90, 0.2],
    [8.89, 14.90, 0.515],
    [15.44, 14.90, 0.6],
    [20.06, 14.90, 0.2],
    [22.13, 14.88, 0.515],
    [21.43, 7.48, 0],
    [23.59, 5.16, 0.65],
    [21.79, 5.28, 0.65],
    [21.30, 4.36, 0.65],
    [20.65, 3.41, 0.65],
    [23.54, 0.02, 0.515],
    [19.04, 0.07, 0.515],
    [16.19, 0.12, 0.2],
    [12.49, 0.14, 0.6],
    [7.91, 0.17, 0.2],
    [4.53, 14.90, 0.515],
    [16.24, 11.64, 0],
    [6.18, 9.71, 0.65],
    [13.22, 1.10, 0.2],
    [13.22, 0.15, 0.2],
    [5.79, 0.15, 0.515],
    [5.75, 1.07, 0.515],
    [7.74, 1.14, 0.945],
    [7.72, 2.58, 0.945],
    [22.20, 13.78, 0.515],
    [20.25, 13.78, 0.945],
    [20.25, 12.39, 0.945]
]

# 德劳内三角定位选取定位点
choose = {"cam_left_red": [37, 65, 33, 66, 73, 72, 32, 28,
                           27, 29, 26, 30, 31, 15, 14, 41,
                           42, 40, 39, 9, 10, 11, 8, 12,
                           13, 1, 2, 3, 67, 38, 76, 77,
                           16, 17, 71],
          "cam_right_red": [33, 32, 28, 27, 29, 26, 31, 30,
                            80, 79, 20, 16, 17, 54, 2, 3,
                            76, 77, 9, 10, 11, 8, 15, 14,
                            13, 38, 71, 41, 42, 39, 40],
          "cam_left_blue": [38, 55, 14, 54, 53, 52, 15, 66,
                            11, 12, 10, 8, 9, 44, 32, 33,
                            39, 40, 42, 41, 30, 29, 28, 26,
                            61, 27, 36, 18, 19, 20, 56, 37,
                            79, 80, 34, 35],
          "cam_right_blue": [14, 15, 11, 12, 10, 8, 44, 9,
                             77, 76, 2, 34, 35, 66, 19, 20,
                             79, 80, 30, 29, 28, 26, 32, 33,
                             36, 37, 61, 39, 40, 41, 42]
          }

# 0为正式场上使用的points 1为debug用
objPoints = [
    {
        "cam_left_red": np.array([real_points[0],
                                  real_points[1],
                                  real_points[5],
                                  real_points[13],
                                  real_points[7],
                                  real_points[8],
                                  real_points[27],
                                  real_points[26],
                                  real_points[51],
                                  real_points[29]], dtype=np.float32),
        "cam_right_red": np.array([real_points[19],
                                   real_points[5],
                                   real_points[13],
                                   real_points[7],
                                   real_points[8],
                                   real_points[27],
                                   real_points[26],
                                   real_points[48],
                                   real_points[29]], dtype=np.float32),
        "cam_left_blue": np.array([real_points[17],
                                   real_points[18],
                                   real_points[22],
                                   real_points[32],
                                   real_points[25],
                                   real_points[29],
                                   real_points[10],
                                   real_points[11],
                                   real_points[12],
                                   real_points[8]], dtype=np.float32),
        "cam_right_blue": np.array([real_points[2],
                                    real_points[22],
                                    real_points[32],
                                    real_points[25],
                                    real_points[29],
                                    real_points[10],
                                    real_points[11],
                                    real_points[48],
                                    real_points[8]], dtype=np.float32),
    },
    {
        "cam_left_red": np.array([[9.56, 2.91, .90],  # 风车狙击点角
                                  [5.59, 5.50, 1.376],  # 烧饼轨道左
                                  [5.59, 9.36, 1.376],  # 烧饼轨道右
                                  [9.09, 6.69, .600],  # 环形高低银矿处角
                                  [11.18, 5.91, 0.],  # 环形高低坡下角(右)
                                  [10.15, 5.26, 0.],  # 环形高地坡右下角(左)
                                  [9.09, 9.36, .600]], dtype=np.float32),
        "cam_right_red": np.array([[9.56, 2.91, .90],  # 风车狙击点角
                                   [5.59, 5.50, 1.376],  # 烧饼轨道左
                                   [5.59, 9.36, 1.376],  # 烧饼轨道右
                                   [9.09, 6.69, .600],  # 环形高低银矿处角
                                   [11.18, 5.91, 0.],  # 环形高低坡下角(右)
                                   [10.15, 5.26, 0.],  # 环形高地坡右下角(左)
                                   [9.09, 9.36, .600]], dtype=np.float32),
        "cam_left_blue": np.array([[9.56, 2.91, .90],  # 风车狙击点角
                                   [5.59, 5.50, 1.376],  # 烧饼轨道左
                                   [5.59, 9.36, 1.376],  # 烧饼轨道右
                                   [9.09, 6.69, .600],  # 环形高低银矿处角
                                   [11.18, 5.91, 0.],  # 环形高低坡下角(右)
                                   [10.15, 5.26, 0.],  # 环形高地坡右下角(左)
                                   [9.09, 9.36, .600]], dtype=np.float32),
        "cam_right_blue": np.array([[9.56, 2.91, .90],  # 风车狙击点角
                                    [5.59, 5.50, 1.376],  # 烧饼轨道左
                                    [5.59, 9.36, 1.376],  # 烧饼轨道右
                                    [9.09, 6.69, .600],  # 环形高低银矿处角
                                    [11.18, 5.91, 0.],  # 环形高低坡下角(右)
                                    [10.15, 5.26, 0.],  # 环形高地坡右下角(左)
                                    [9.09, 9.36, .600]], dtype=np.float32),
    }
]

# 0为正式场上使用的points 1为debug用
Delaunary_points = [
    {
        "cam_left": [
            (0, 0, 3072, 2048),
            real_points
        ],
        "cam_right": [
            (0, 0, 3072, 2048),
            real_points
        ]
    },

    {
        "cam_left": [
            (0, 1023, 3072, 1024),
            real_points

        ],
        "cam_right": [
            (0, 1023, 3072, 1024),
            real_points
        ]
    }

]
